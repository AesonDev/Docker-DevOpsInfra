version: '3'

volumes :
    jenkins: 
       driver: cloudstor:azure
    nexus: 
       driver: cloudstor:azure
    gitlabData:
       driver: cloudstor:azure

    gitlabConfig: 
       driver: cloudstor:azure
    gitlabLogs:
       driver: cloudstor:azure
    prometheus: 
       driver: cloudstor:azure
    elasticsearch:
       driver: cloudstor:azure


services: 
    jenkins: 
        build: ./Containers/Jenkins/
        container_name: 'jenkins'
        restart: 'unless-stopped'
        ports: 
           - '80:8080'
           - '443:8443'
        environment: 
           - JENKINS_PASSWORD=JenkinsSecret
           - JENKINS_USERNAME=admin
        volumes: 
           - 'jenkins:/bitnami'
        networks: 
           - 'devops'
    nexus:
        build: ./Containers/Nexus/
        container_name: 'nexus'
        restart: 'unless-stopped'
        ports: 
           - '8081:8081'
        volumes: 
           - 'nexus:/nexus-data'
        networks:
           - 'devops'
    gitlab:
        build: ./Containers/Gitlab/
        container_name: 'gitlab'
        restart: 'unless-stopped'                           
        ports: 
           - '81:80'
           - '23:22'
        volumes: 
           - 'gitlabData:/etc/gitlab'
           - 'gitlabLogs:/var/log/gitlab'
           - 'gitlabConfig:/var/opt/gitlab'
        networks:
           - 'devops'
    node_exporter:
        build: ./Containers/NodeExporter/
        container_name: infrahost_node_exporter
        restart: unless-stopped
        ports:
            - '9100:9100'
        networks:
            - 'devops'
    cadvisor:
        build: ./Containers/CAdvisor/
        container_name: caAdvisor
        restart: unless-stopped
        volumes:
            - '/:/rootfs:ro'
            - '/var/run:/var/run:rw'
            - '/sys:/sys:ro'
            - '/var/lib/docker/:/var/lib/docker:ro'
        ports:
            - '8082:8080'
        networks:
            - 'devops'
    prometheus:
        build: ./Containers/Prometheus/
        container_name: prometheus
        restart: unless-stopped
        volumes:
            - './Config/Prometheus/:/etc/prometheus'
            - 'prometheus:/prometheus'
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--storage.tsdb.no-lockfile'
            - '--web.console.libraries=/usr/share/prometheus/console_libraries'
            - '--web.console.templates=/usr/share/prometheus/consoles'
        ports:
            - '9090:9090'
        networks:
            - 'devops'
    grafana:
        build: ./Containers/Grafana/
        container_name: grafana        
        restart: unless-stopped
        ports:
            - '3000:3000'
        environment: 
            GF_DASHBOARDS_JSON_ENABLED: "true"
        volumes: 
            - ./Config/Grafana/dashboards/:/var/lib/grafana/dashboards/
        networks:
            - 'devops'
    elasticsearch:
        build: ./Containers/ElasticSearch/
        container_name: elasticsearch
        restart: unless-stopped
        ports:
            - '9200:9200'
            - '9300:9300'
        environment:
            ES_JAVA_OPTS: "-Xmx256m -Xms256m"
        volumes:
            - 'elasticsearch:/usr/share/elasticsearch/data'
            - ./Config/ElasticSearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
        networks:
            - 'devops'
    kibana:
        build: ./Containers/Kibana/
        container_name: kibana
        restart: unless-stopped
        ports:
            - '5601:5601'
        depends_on:
            - elasticsearch
        volumes:
            - ./Config/Kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
        networks:
            - 'devops'
    elasticsearch-exporter:
        build: ./Containers/ElasticSearchExporter/
        container_name: elasticsearch-exporter
        command: 
           - '-es.uri=http://elasticsearch:9200'
        restart: unless-stopped
        ports: 
           - 9108:9108
        networks:
           - 'devops'
    logstash:
        build: ./Containers/Logstash/
        container_name: logstash
        restart: unless-stopped
        volumes:
            - ./Config/Logstash/:/usr/share/logstash/config:ro
            - ./Config/Logstash/Pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
        ports:
            - "5000:5000"
        environment:
            LS_JAVA_OPTS: "-Xmx256m -Xms256m"
        networks:
            - 'devops'
        depends_on:
            - elasticsearch
    logspout:
        build: ./Containers/Logspout/
        container_name: logspout
        restart: unless-stopped
        volumes:
           - /var/run/docker.sock:/var/run/docker.sock
        ports: 
           - '8083:80'
        environment:
           ROUTE_URIS: logstash://logstash:5000
           LOGSTASH_TAGS: docker-elk
        networks:
           - 'devops'
        depends_on:
           - logstash
networks:
    devops: 

